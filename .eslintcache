[{"/home/iolanda/ReactProjects/contacts/src/index.js":"1","/home/iolanda/ReactProjects/contacts/src/App.js":"2","/home/iolanda/ReactProjects/contacts/src/reportWebVitals.js":"3","/home/iolanda/ReactProjects/contacts/src/services/DataService.js":"4","/home/iolanda/ReactProjects/contacts/src/constants/Requests.js":"5","/home/iolanda/ReactProjects/contacts/src/models/Contact.js":"6","/home/iolanda/ReactProjects/contacts/src/store/actions/Contacts.js":"7","/home/iolanda/ReactProjects/contacts/src/store/reducers/Contacts.js":"8","/home/iolanda/ReactProjects/contacts/src/components/ContactList/ContactList.js":"9","/home/iolanda/ReactProjects/contacts/src/components/Contact/Contact.js":"10","/home/iolanda/ReactProjects/contacts/src/components/ContactDetail/ContactDetail.js":"11","/home/iolanda/ReactProjects/contacts/src/components/ContactDetail/Label/Label.js":"12"},{"size":1414,"mtime":1611293504305,"results":"13","hashOfConfig":"14"},{"size":825,"mtime":1611325454259,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611266084918,"results":"16","hashOfConfig":"14"},{"size":266,"mtime":1611324524810,"results":"17","hashOfConfig":"14"},{"size":84,"mtime":1611268088991,"results":"18","hashOfConfig":"14"},{"size":183,"mtime":1611287274500,"results":"19","hashOfConfig":"14"},{"size":735,"mtime":1611323533215,"results":"20","hashOfConfig":"14"},{"size":416,"mtime":1611326772207,"results":"21","hashOfConfig":"14"},{"size":1249,"mtime":1611327307535,"results":"22","hashOfConfig":"14"},{"size":776,"mtime":1611327338384,"results":"23","hashOfConfig":"14"},{"size":7026,"mtime":1611339588497,"results":"24","hashOfConfig":"14"},{"size":384,"mtime":1611335876948,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16jctn5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/home/iolanda/ReactProjects/contacts/src/index.js",[],["56","57"],"/home/iolanda/ReactProjects/contacts/src/App.js",["58","59","60"],"import React, {useEffect, useCallback} from 'react';\n\nimport './App.css';\n\n// Import Redux\nimport { useDispatch} from 'react-redux';\nimport { getContacts } from './store/actions/Contacts';\n\n// Import Components\nimport ContactList from './components/ContactList/ContactList';\n\n// Import Modal\nimport {\n  ModalProvider,\n  Modal,\n  useModal,\n  ModalTransition,\n} from 'react-simple-hook-modal';\n\nfunction App() {\n  \n  useEffect (() => {\n    handleContacts(); \n  });\n  \n  const dispatch = useDispatch(); \n  const handleContacts = useCallback(async () => {\n    try{\n      await dispatch(getContacts()); \n    }catch(err){\n      console.log(err.message);\n    }\n  },[dispatch]);\n\n  return (\n    <div className=\"App\">\n      <ModalProvider>\n        <ContactList />  \n      </ModalProvider>      \n    </div>\n  );\n}\n\nexport default App;\n","/home/iolanda/ReactProjects/contacts/src/reportWebVitals.js",[],"/home/iolanda/ReactProjects/contacts/src/services/DataService.js",[],"/home/iolanda/ReactProjects/contacts/src/constants/Requests.js",["61"],"export default{\n    apiUrl: 'https://5fbfc1dafd14be001674910b.mockapi.io/contact',\n}","/home/iolanda/ReactProjects/contacts/src/models/Contact.js",[],"/home/iolanda/ReactProjects/contacts/src/store/actions/Contacts.js",[],"/home/iolanda/ReactProjects/contacts/src/store/reducers/Contacts.js",["62"],"/home/iolanda/ReactProjects/contacts/src/components/ContactList/ContactList.js",["63","64","65"],"import React, {useCallback, useState, useEffect} from 'react';\n\nimport './ContactList.css';\n\n// Import Redux\nimport { useSelector } from 'react-redux';\n\n// Import Components\nimport Contact from '../Contact/Contact';\nimport ContactDetail from '../ContactDetail/ContactDetail';\n\n// Import Modal\nimport {\n    Modal,\n    useModal,\n    ModalTransition,\n  } from 'react-simple-hook-modal';\n\nconst ContactList = (props) => {\n    const { isModalOpen, openModal, closeModal } = useModal();\n\n    const contacts = useSelector(state => state.contactsReducer.contacts);\n    console.log(contacts.person);\n    return (\n        <div >\n            <p class=\"mt-2 text-gray-500\">Contacts</p>\n            <button onClick={openModal}>\n                <Contact firstname={contacts.person.first_name} email={contacts.person.emails[0]} picture={contacts.person.profile_pic}/>\n            </button>\n                      \n            <Modal\n                id=\"any-unique-identifier\"\n                isOpen={isModalOpen}\n                transition={ModalTransition.BOTTOM_UP}\n            >\n                <ContactDetail closeModal={closeModal} person={contacts.person} company={contacts.company}/>\n            </Modal>\n        </div>\n    );\n};\n\nexport default ContactList;","/home/iolanda/ReactProjects/contacts/src/components/Contact/Contact.js",["66","67","68"],"/home/iolanda/ReactProjects/contacts/src/components/ContactDetail/ContactDetail.js",["69","70","71","72","73","74","75","76","77","78","79"],"import React, {useState, useEffect} from 'react';\n\nimport './ContactDetail.css';\n\nimport Label from './Label/Label';\n\nconst ContactDetail = (props) => {\n    const getPrimaryPhone = () => {\n        let primary_number = \"No number\";\n        props.person.phone_numbers.map(function(phone, i){\n            if(phone.primary){\n                primary_number = phone.number;\n            }\n        });\n        return primary_number;\n    }\n\n    const getLocalTime = () => {\n        const time = new Date().toLocaleString(\"en-US\", {timeZone: \"America/New_York\"})\n        return time;\n    }\n\n    return (\n        <div className=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n            {/* Header of modal */}\n            <div className=\"flex justify-between p-3 border-b-2 border-gray-200 \">\n                <div className=\"md:flex-initial\">\n                    <p className=\"text-gray-500 font-bold\">Contact Details</p>\n                </div>\n                <div className=\"md:flex-initial\">\n                    <button onClick={props.closeModal}>\n                        <svg  className=\"w-4 h-4 mr-2 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            {/* Body of modal */}\n            <div className=\"p-3\">\n                <div className=\"flex flex-col items-center\">\n                    <img className=\"h-20 w-full object-cover md:w-20 mt-3 mb-3 rounded-xl\" src={props.person.profile_pic} alt=\"profile picture\" />\n                    <p className=\"font-bold capitalize\">{props.person.first_name} {props.person.last_name}</p>\n                    <p className=\"text-gray-500 capitalize\">{props.person.roles[0]} at <a className=\"text-indigo-500 font-bold\">{props.person.company_name}</a></p>\n\n                    <div className=\"flex mt-5 mb-5 items-center\">\n\n                        <a target='_blank' href={\"https://\" + props.person.facebook} className=\"border-2 border-gray-200 p-2 ml-3 mr-3 rounded-xl\">\n                            <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        </a>\n                        <a target='_blank' href={\"https://\" + props.person.twitter} className=\"border-2 border-gray-200 p-2 ml-3 mr-3 rounded-xl\">\n                            <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        </a>\n                        <a target='_blank' href={\"https://\" + props.person.linkedin} className=\"border-2 border-gray-200 p-2 ml-3 mr-3 rounded-xl\">\n                            <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n                \n                {/* Details */}\n                <div className=\"details\">\n                    <div className=\"md:flex justify-between\">\n                        <div className=\"md:flex-1\">\n                            <Label title=\"phone\" content={getPrimaryPhone()}/>\n                        </div>\n                        <div className=\"md:flex-1\">\n                            <Label title=\"local time\" content={getLocalTime()}/>\n                        </div>\n                    </div>\n                    <Label title=\"location\" content={props.person.city+\", \"+props.person.state}/>\n\n                    <p className=\"text-gray-500 font-bold text-left mt-5 mb-3\">Company Info</p>\n\n                    <div className=\"md:flex justify-between\">\n                        <div className=\"md:flex-1\">\n                            <Label title=\"industry\" content={props.company.industry}/>\n                        </div>\n                        <div className=\"md:flex-1\">\n                            <Label title=\"location\" content={props.company.locality[0]+', '+ props.company.locality[1]}/>\n                        </div>\n                    </div>\n\n                    <div className=\"md:flex justify-between\">\n                        <div className=\"md:flex-1\">\n                            <Label title=\"funding\" content=\"$917M\"/>\n                        </div>\n                        <div className=\"md:flex-1\">\n                            <Label title=\"employee count\" content={props.person.company_employees}/>\n                        </div>\n                    </div>\n\n                    <Label title=\"company description\" content={props.company.description}/>\n\n                    <Label title=\"social media\" content=\"\">\n                        <div className=\"flex\">\n                            <a target='_blank' href={\"https://\" + props.company.facebook_url} className=\"p-2 ml-3 mr-3\">\n                                <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </a>\n                            <a target='_blank' href={\"https://\" + props.company.twitter_url} className=\"p-2 ml-3 mr-3\">\n                                <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </a>\n                            <a target='_blank' href={\"https://\" + props.person.linkedin} className=\"p-2 ml-3 mr-3\">\n                                <svg className=\"w-4 h-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </a>\n                        </div>\n                    </Label>\n                </div>\n            </div>\n           \n        </div>\n    );\n};\n\nexport default ContactDetail;","/home/iolanda/ReactProjects/contacts/src/components/ContactDetail/Label/Label.js",["80","81"],"import React, {useState, useEffect} from 'react';\n\nimport './Label.css';\n\nconst Label = (props) => {\n    \n    return (\n        <div className=\"mb-3\">\n            <p className=\"text-gray-500 text-sm capitalize text-left\">{props.title}</p>\n            <p className=\"font-bold text-justify\">{props.content}</p>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Label;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":15,"column":3,"nodeType":"88","messageId":"89","endLine":15,"endColumn":8},{"ruleId":"86","severity":1,"message":"90","line":16,"column":3,"nodeType":"88","messageId":"89","endLine":16,"endColumn":11},{"ruleId":"86","severity":1,"message":"91","line":17,"column":3,"nodeType":"88","messageId":"89","endLine":17,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":1,"column":1,"nodeType":"94","endLine":3,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":14,"column":5,"nodeType":"97","messageId":"98","endLine":14,"endColumn":18},{"ruleId":"86","severity":1,"message":"99","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"100","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"101","line":1,"column":39,"nodeType":"88","messageId":"89","endLine":1,"endColumn":48},{"ruleId":"86","severity":1,"message":"100","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"86","severity":1,"message":"101","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":11,"column":21,"nodeType":"104","endLine":11,"endColumn":115},{"ruleId":"86","severity":1,"message":"100","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"86","severity":1,"message":"101","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":10,"column":40,"nodeType":"107","messageId":"108","endLine":10,"endColumn":48},{"ruleId":"102","severity":1,"message":"103","line":41,"column":21,"nodeType":"104","endLine":41,"endColumn":147},{"ruleId":"109","severity":1,"message":"110","line":43,"column":88,"nodeType":"104","endLine":43,"endColumn":129},{"ruleId":"111","severity":1,"message":"112","line":47,"column":25,"nodeType":"104","endLine":47,"endColumn":148},{"ruleId":"111","severity":1,"message":"112","line":52,"column":25,"nodeType":"104","endLine":52,"endColumn":147},{"ruleId":"111","severity":1,"message":"112","line":57,"column":25,"nodeType":"104","endLine":57,"endColumn":148},{"ruleId":"111","severity":1,"message":"112","line":101,"column":29,"nodeType":"104","endLine":101,"endColumn":121},{"ruleId":"111","severity":1,"message":"112","line":106,"column":29,"nodeType":"104","endLine":106,"endColumn":120},{"ruleId":"111","severity":1,"message":"112","line":111,"column":29,"nodeType":"104","endLine":111,"endColumn":116},{"ruleId":"86","severity":1,"message":"100","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"86","severity":1,"message":"101","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'useModal' is defined but never used.","'ModalTransition' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]